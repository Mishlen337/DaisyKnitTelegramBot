from aiogram import types
from loguru import logger
from aiogram.dispatcher.storage import FSMContext

from data import config
from .initiate_survey import SurveyInvitation
from utils.db_api.models.user import User
from utils.db_api.models.survey import Survey
from notifiers.survey.event_args import SurveyEventArgs


hello_message = """–ú—ã –ø—Ä–∏–≤–æ–∑–∏–º –¥–ª—è –≤–∞—Å —Å–∞–º—É—é —Å–≤–µ–∂—É—é —Ñ–æ—Ä–µ–ª—å –≤ –≥–æ—Ä–æ–¥–µ –ë–∞—Ä, –ß–µ—Ä–Ω–æ–≥–æ—Ä–∏—è! üôÇ

–ü–æ –ª—É—á—à–µ–π —Ü–µ–Ω–µ –∏–∑ —Ñ–æ—Ä–µ–ª–µ–≤—ã—Ö —Ö–æ–∑—è–π—Å—Ç–≤ —Å–µ–≤–µ—Ä–∞ –ß–µ—Ä–Ω–æ–≥–æ—Ä–∏–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ –ø–∞—Ä—ã —á–∞—Å–æ–≤ –ø–æ—Å–ª–µ –≤—ã–ª–æ–≤–∞ üíï

‚ùó–†—ã–±–∞ –≤—ã–ª–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–º—É –∑–∞–∫–∞–∑—É –∏–∑ –ø—Ä—É–¥–æ–≤ –≤ –ù–∏–∫—à–∏—á–µ –∏ –ü–ª—É–∂–∏–Ω–µ –≤ –Ω–æ—á—å –Ω–∞–∫–∞–Ω—É–Ω–µ –¥–æ—Å—Ç–∞–≤–∫–∏.‚ùó
"""
survey_invitation = SurveyInvitation()


async def bot_start(msg: types.Message, state: FSMContext):
    """Handler to start bot in a first entry

    :param msg: Message instance caused by received message
    :type msg: types.Message
    :param state: FSMContext instance
    :type state: FSMContext
    """
    try:
        await msg.answer(f'–ü—Ä–∏–≤–µ—Ç, {msg.from_user.full_name}!')
        await msg.answer(hello_message)
        user = User(msg.from_user.id)
        user.telephone = '0'
        user.username = msg.from_user.username if msg.from_user.username else ''
        await user.save()
        await state.set_state("initial_state")

        # send survey
        survey = Survey(config.SURVEY_NAME)
        await survey.set_info_db()
        if survey.id is None:
            await msg.answer("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞/–æ–ø—Ä–æ—Å–∞!")
        else:
            event_args = SurveyEventArgs(user, survey)
            await survey_invitation.survey_manager.notify(event_args)

    except Exception as ex:
        logger.error(ex)
        await msg.answer("–ü—Ä–æ–±–ª–µ–º—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ! –ü–æ–¥–¥–µ—Ä–∂–∫–∞ @mishlen25")
